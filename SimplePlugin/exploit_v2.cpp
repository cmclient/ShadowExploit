#include "../plugin_sdk/plugin_sdk.hpp"
#include "exploit_v2.h"

namespace exploit_v2
{

	TreeTab* main_tab = nullptr;

	namespace exploit
	{
		TreeEntry* step_1 = nullptr;
		TreeEntry* step_2 = nullptr;
	}

	// Event handler functions
	void on_update();
	void on_process_spell_cast(game_object_script sender, spell_instance_script spell);

	void load()
	{
		main_tab = menu->create_tab("shadowexploit", "ShadowExploit v2");
		{
			const auto combo = main_tab->add_tab("exploit", "Exploit Settings");
			{
				exploit::step_1 = combo->add_hotkey("step_1", "Step 1", TreeHotkeyMode::Hold, '8', false);
				exploit::step_2 = combo->add_hotkey("step_2", "Step 2", TreeHotkeyMode::Hold, '9', false);
			}
		}

		event_handler<events::on_update>::add_callback(on_update);
		event_handler<events::on_process_spell_cast>::add_callback(on_process_spell_cast);

		myhero->print_chat(1, "ShadowExploit v2");
	}

	void unload()
	{
		menu->delete_tab(main_tab);
		event_handler<events::on_update>::remove_handler(on_update);
		event_handler<events::on_process_spell_cast>::remove_handler(on_process_spell_cast);
	}

	bool didStepOne = false;
	float last = 0.f;

	void on_update()
	{
		if (myhero->is_dead())
		{
			return;
		}

	}

	void on_process_spell_cast(game_object_script sender, spell_instance_script spell)
	{
		if (sender->is_me())
		{
			myhero->print_chat(1, spell->get_spell_data()->get_name_cstr());
			myhero->sell_item(spellslot::item_1);
			myhero->undo_item();
		}
	}
}
